import yaml from "@rollup/plugin-yaml"
import { defineNuxtConfig } from "nuxt/config"

// https://nuxt.com/docs/api/configuration/nuxt-config
export default defineNuxtConfig({
  compatibilityDate: "2024-04-03",
  devtools: { enabled: true },
  modules: [
    "@nuxt/ui",
    "@nuxt/test-utils/module",
    "@nuxt/eslint",
    "nuxt-security",
    "@nuxtjs/seo",
    "@nuxt/scripts",
  ],
  vite: { plugins: [yaml()] },
  runtimeConfig: {
    public: {
      appVersion: process.env.npm_package_version || "unknown",
      contactFormToEmail: "benoit@frite.dev",
      emailjsUserPubKey: "v_5w2uNf_muKtiZ_h",
      emailjsServiceId: "service_eqtnwg3",
      emailjsTemplateId: "template_grzi0mc",
      // prettier-ignore
      googleSchedulerCalendarId: "AcZssZ1bFv7MU8Veh8vByx4_AGhr52K5pVaZKx9A4xGvDFUIR3a2qjoAo4i7rA9ljbcUqhheLlQvLEOc",
      captchaSiteKey: "6Le_eE8qAAAAAPsyNWtWJZTulFsdQ98bOM2KiC3w",
    },
  },
  colorMode: {
    preference: "dark",
  },
  site: {
    url: "https://frite.dev",
    name: "frite.dev â€¢ Portfolio",
    description:
      "frite.dev is a software development company providing tailored solutions for businesses.",
    defaultLocale: "en",
  },
  schemaOrg: {
    identity: "Organization",
  },
  app: {
    head: {
      // Other meta items (title, locale, description) are auto-generated by NuxtSEO
      meta: [
        { charset: "utf-8" },
        {
          name: "viewport",
          content: "width=device-width, height=device-height, initial-scale=1",
        },
      ],
      link: [
        { rel: "manifest", href: "/site.webmanifest" },
        // icon link items are auto-generated by NuxtSEO
      ],
    },
  },
  security: {
    headers: {
      crossOriginEmbedderPolicy:
        process.env.NODE_ENV === "development" ? "unsafe-none" : "require-corp", //https://github.com/Baroshem/nuxt-security/issues/101
      contentSecurityPolicy: {
        "upgrade-insecure-requests": process.env.NODE_ENV === "development" ? false : true, // USE ONLY IN DEV MODE
        "script-src": [
          "'self'",
          "'unsafe-inline'",
          "https:",
          "https://www.google.com/recaptcha/",
          "https://www.gstatic.com/recaptcha/",
          "'strict-dynamic'",
          "'nonce-{{nonce}}'",
        ],
        "frame-src": [
          "https://www.google.com/recaptcha/",
          "https://recaptcha.google.com/recaptcha/",
        ],
        "frame-ancestors": [
          "'self'",
          "https://www.google.com/",
          "https://www.google.com/recaptcha",
        ],
      },
    },
    corsHandler: {
      origin: "*",
    },
  },
  typescript: {
    typeCheck: "build",
    tsConfig: {
      include: ["types"],
      compilerOptions: {
        baseUrl: ".",
        paths: {
          "~/*": ["./*"],
          "@/*": ["./*"],
        },
      },
    },
  },
})
